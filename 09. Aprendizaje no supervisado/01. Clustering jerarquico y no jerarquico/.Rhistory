datosBanca$mortgage_CAT <- ifelse(125979<datosBanca$mortgage, 4, datosBanca$mortgage_CAT)
datosBanca$mortgage_CAT <- datosBanca$mortgage_CAT/4
summary(datosBanca$mortgage_CAT)
datosBanca$loan_CAT<-discrete_by_quantile(datosBanca$loan)/4
datosBanca$cards_CAT<-discrete_by_quantile(datosBanca$cards)/4
datosBanca$insurance_CAT<-discrete_by_quantile(datosBanca$insurance)/4
datosBanca$billPayment_CAT<-discrete_by_quantile(datosBanca$billPayment)/4
# La domiciliación de nómina es binaria y no es preciso estandarizarla
# Importante hacerla numérica porque si no, la considera integer y su AVERAGE vía SQL devuelve 0
datosBanca$salary_CAT<-as.numeric(datosBanca$salary)
# Cambiar missings por 0 #
datosBanca$checkingAccount_CAT[is.na(datosBanca$checkingAccount_CAT)]<-0
datosBanca$deposit_CAT[is.na(datosBanca$deposit_CAT)]<-0
datosBanca$shareOfStock_CAT[is.na(datosBanca$shareOfStock_CAT)]<-0
datosBanca$pensionPlan_CAT[is.na(datosBanca$pensionPlan_CAT)]<-0
datosBanca$mortgage_CAT[is.na(datosBanca$mortgage_CAT)]<-0
datosBanca$loan_CAT[is.na(datosBanca$loan_CAT)]<-0
datosBanca$cards_CAT[is.na(datosBanca$cards_CAT)]<-0
datosBanca$insurance_CAT[is.na(datosBanca$insurance_CAT)]<-0
datosBanca$billPayment_CAT[is.na(datosBanca$billPayment_CAT)]<-0
datosBanca.cat <- datosBanca %>%
select(ends_with('_CAT'))
summary(datosBanca.cat)
Mcor <- cor(datosBanca.cat,method = c("spearman"))
corrplot(Mcor, method = 'number')
?hclust
datosBanca.cat.subset <- datosBanca.cat[sample(nrow(datosBanca.cat), nrow(datosBanca.cat) * 0.1), ]
rownames(datosBanca.cat.subset) <- 1:nrow(datosBanca.cat.subset)
matrizDistancias <- vegdist(datosBanca.cat.subset, method = "euclidean")
clusterJerarquico <- hclust(matrizDistancias, method="ward.D2")
plot(as.dendrogram(clusterJerarquico),  main = "Dendrograma", leaflab = 'none')
for (k in 2:10){
rect.hclust(clusterJerarquico, k=k, border=k)
}
datosBanca.cat.subset <- datosBanca.cat[sample(nrow(datosBanca.cat), nrow(datosBanca.cat) * 0.1), ]
rownames(datosBanca.cat.subset) <- 1:nrow(datosBanca.cat.subset)
matrizDistancias <- vegdist(datosBanca.cat.subset, method = "euclidean")
clusterJerarquico <- hclust(matrizDistancias, method="ward.D2")
plot(as.dendrogram(clusterJerarquico),  main = "Dendrograma", leaflab = 'none')
# for (k in 2:10){
#   rect.hclust(clusterJerarquico, k=k, border=k)
# }
datosBanca.cat.subset <- datosBanca.cat[sample(nrow(datosBanca.cat), nrow(datosBanca.cat) * 0.1), ]
rownames(datosBanca.cat.subset) <- 1:nrow(datosBanca.cat.subset)
matrizDistancias <- vegdist(datosBanca.cat.subset, method = "euclidean")
clusterJerarquico <- hclust(matrizDistancias, method="ward.D2")
plot(as.dendrogram(clusterJerarquico),  main = "Dendrograma", leaflab = 'none')
for (k in 2:8){
rect.hclust(clusterJerarquico, k=k, border=k)
}
calinsky <- cascadeKM(datosBanca.cat.subset, inf.gr = 2, sup.gr = 10, criterion = "calinski", iter = 3)
calinsky$results
plot(calinsky$results[2,], type = 'b', lty=3, xlab="Groups", ylab = "Calinski", xaxt='n')
axis(1, seq(1,9), labels = 2:10)
calinsky <- cascadeKM(datosBanca.cat.subset, inf.gr = 2, sup.gr = 10, criterion = "calinski", iter = 3)
calinsky$results
plot(calinsky$results[2,], type = 'b', lty=3, xlab="Clusters", ylab = "Calinski", xaxt='n')
axis(1, seq(1,9), labels = 2:10)
kmax <- 15
asw <- numeric(kmax)
for(k in 2:kmax){
sil <- silhouette(cutree(clusterJerarquico, k = k), matrizDistancias)
asw[k] <- summary(sil)$avg.width
}
k.best <- which.max(asw)
plot(1:kmax, asw, type="h",
main = "Silhouette-optimal number of clusters",
xlab = "k (number of groups)", ylab = "Average silhouette width")
axis(1, k.best, paste("optimum", k.best, sep = "\n"), col = "red", font = 2,
col.axis = "red")
points(k.best, max(asw), pch = 16, col = "red", cex = 1.5)
calinsky <- cascadeKM(datosBanca.cat.subset, inf.gr = 2, sup.gr = 10, criterion = "calinski", iter = 3)
calinsky$results
plot(calinsky$results[2,], type = 'b', lty=3, xlab="k (number of groups)", ylab = "Calinski", xaxt='n')
axis(1, seq(1,9), labels = 2:10)
kmax <- 15
asw <- numeric(kmax)
for(k in 2:kmax){
sil <- silhouette(cutree(clusterJerarquico, k = k), matrizDistancias)
asw[k] <- summary(sil)$avg.width
}
k.best <- which.max(asw)
plot(1:kmax, asw, type="h",
main = "Silhouette-optimal number of clusters",
xlab = "k (number of groups)", ylab = "Average silhouette width")
axis(1, k.best, paste("optimum", k.best, sep = "\n"), col = "red", font = 2,
col.axis = "red")
points(k.best, max(asw), pch = 16, col = "red", cex = 1.5)
calinsky <- cascadeKM(datosBanca.cat.subset, inf.gr = 2, sup.gr = 10, criterion = "calinski", iter = 5)
calinsky$results
plot(calinsky$results[2,], type = 'b', lty=3, xlab="k (number of groups)", ylab = "Calinski", xaxt='n')
axis(1, seq(1,9), labels = 2:10)
asignacionJerarquica <- cbind(datosBanca.cat, cutree(clusterJerarquico, k = 4))
asignacionJerarquica <- cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
colnames(asignacionJerarquica)[11] <- "cluster"
centroideGeneral <- datosBanca.cat %>%
summarise(checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
centroidesJerarquico <-
asignacionJerarquica %>%
group_by(cluster) %>%
summarise(size = n(),
checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans <- kmeans(datosBanca.cat, centers=centroidesJerarquico[,3:12])
kmeans$centers
kmeans$size
asignacionJerarquica <- cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
colnames(asignacionJerarquica)[11] <- "cluster"
centroidesJerarquico <-
asignacionJerarquica %>%
group_by(cluster) %>%
summarise(size = n(),
checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
centroidesJerarquico
kmeans <- kmeans(datosBanca.cat, centers=centroidesJerarquico[,3:12])
kmeans$centers
kmeans$size
centroidesJerarquico
centroideGeneral <- datosBanca.cat %>%
summarise(checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
asignacionJerarquica <- cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
colnames(asignacionJerarquica)[11] <- "cluster"
centroidesJerarquico <-
asignacionJerarquica %>%
group_by(cluster) %>%
summarise(size = n(),
checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans <- kmeans(datosBanca.cat, centers=centroidesJerarquico[,3:12])
kmeans$centers
kmeans$size
asignacionJerarquica <- cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
colnames(asignacionJerarquica)[11] <- "cluster"
centroidesJerarquico <-
asignacionJerarquica %>%
group_by(cluster) %>%
summarise(size = n(),
checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans <- kmeans(datosBanca.cat, centers=centroidesJerarquico[,3:12])
kmeans$centers
kmeans$size
centroideGeneral <- datosBanca.cat %>%
summarise(checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans.subset <- kmeans(datosBanca.cat.subset, centers=centroidesJerarquico[,3:12])
fviz_cluster(object = kmeans.subset, data = datosBanca.cat.subset, show.clust.cent = TRUE,
ellipse.type = "euclid",
geom = 'point') +
labs(title = "Resultados clustering K-means") +
theme_bw() +
theme(legend.position = "none")
centroidesParaRadar<-rbind(
rep(1,10) ,
rep(0,10) ,
centroideGeneral,
kmeans$centers)
colors_border = c( rgb(0.2,0.5,0.5,0.9),rgb(0.14,0.83,0.19,0.9))
colors_in = c( rgb(0.2,0.5,0.5,0.4), rgb(0.14,0.83,0.19,0.4))
for (i in 4:nrow(centroidesParaRadar)-3){
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+i),]) , axistype=1 ,
#custom polygon
pcol = colors_border , pfcol = colors_in , plwd=2 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8
)
}
centroidesParaRadar<-rbind(
rep(1,10) ,
rep(0,10) ,
centroideGeneral,
kmeans$centers)
colors_border = c( rgb(0.2,0.5,0.5,0.9),rgb(0.14,0.83,0.19,0.9))
colors_in = c( rgb(0.2,0.5,0.5,0.4), rgb(0.14,0.83,0.19,0.4))
group < 1
centroidesParaRadar<-rbind(
rep(1,10) ,
rep(0,10) ,
centroideGeneral,
kmeans$centers)
colors_border = c( rgb(0.2,0.5,0.5,0.9),rgb(0.14,0.83,0.19,0.9))
colors_in = c( rgb(0.2,0.5,0.5,0.4), rgb(0.14,0.83,0.19,0.4))
group <- 1
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 2
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 3
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 4
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 2
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'No asalariados'
)
group <- 3
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 3
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Ahorradores'
)
asignacionJerarquica
cutree(clusterJerarquico, k = 4)
cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
kmeans.subset <- kmeans(datosBanca.cat.subset, centers=centroidesJerarquico[,3:12])
fviz_cluster(object = kmeans.subset, data = datosBanca.cat.subset, show.clust.cent = TRUE,
ellipse.type = "euclid",
geom = 'point') +
labs(title = "Resultados clustering K-means para la Muestra") +
theme_bw() +
theme(legend.position = "none")
require(knitr)
library(caret)
library(dplyr)
library(corrplot)
library(nima)
library(cluster)
library(factoextra)
library(vegan)
library(dendextend)
library(fmsb)
#opts_knit$set(root.dir = "C:/Users/jherraez/Documents/masterAFI/09. Aprendizaje no supervisado/01. Clustering jerarquico y no jerarquico/")
opts_knit$set(root.dir = "C:/Users/Javier/Documents/masterAFI/09. Aprendizaje no supervisado/01. Clustering jerarquico y no jerarquico/")
# setwd("C:/Users/jherraez/Documents/masterAFI/09. Aprendizaje no supervisado/01. Clustering jerarquico y no jerarquico/")
setwd("C:/Users/Javier/Documents/masterAFI/09. Aprendizaje no supervisado/01. Clustering jerarquico y no jerarquico/")
####################
# Lectura de datos #
####################
datosBanca <- read.csv("Data/datosBanca.csv", header = TRUE, sep=",")
# configuramos una semilla y seleccionamos el 80% de los datos
set.seed(1404)
datosBanca <- datosBanca[sample(nrow(datosBanca), nrow(datosBanca) * 0.8), ]
rownames(datosBanca) <- 1:nrow(datosBanca)
summary(datosBanca)
# Estandarización mediante discretización
datosBanca$checkingAccount_CAT <- discrete_by_quantile(datosBanca$checkingAccount)/4
datosBanca$deposit_CAT <- discrete_by_quantile(datosBanca$deposit)/4
datosBanca$shareOfStock_CAT <- discrete_by_quantile(datosBanca$shareOfStock)/4
datosBanca$pensionPlan_CAT <- discrete_by_quantile(datosBanca$pensionPlan)/4
#datosBanca$mortgage_CAT<-discrete_by_quantile(datosBanca$mortgage)/4
# Como da un error, la asignamos con IF
summary(datosBanca$mortgage)
datosBanca$mortgage_CAT <- datosBanca$mortgage
datosBanca$mortgage_CAT <- ifelse(datosBanca$mortgage <= 0, 1, datosBanca$mortgage_CAT)
datosBanca$mortgage_CAT <- ifelse(0 < datosBanca$mortgage & datosBanca$mortgage <= 45104, 2, datosBanca$mortgage_CAT)
datosBanca$mortgage_CAT <- ifelse(45104 < datosBanca$mortgage & datosBanca$mortgage <= 125979, 3, datosBanca$mortgage_CAT)
datosBanca$mortgage_CAT <- ifelse(125979 < datosBanca$mortgage, 4, datosBanca$mortgage_CAT)
datosBanca$mortgage_CAT <- datosBanca$mortgage_CAT/4
summary(datosBanca$mortgage_CAT)
datosBanca$loan_CAT<-discrete_by_quantile(datosBanca$loan)/4
datosBanca$cards_CAT<-discrete_by_quantile(datosBanca$cards)/4
datosBanca$insurance_CAT<-discrete_by_quantile(datosBanca$insurance)/4
datosBanca$billPayment_CAT<-discrete_by_quantile(datosBanca$billPayment)/4
# La domiciliación de nómina es binaria y no es preciso estandarizarla
# Importante hacerla numérica porque si no, la considera integer y su AVERAGE vía SQL devuelve 0
datosBanca$salary_CAT<-as.numeric(datosBanca$salary)
# Cambiar missings por 0 #
datosBanca$checkingAccount_CAT[is.na(datosBanca$checkingAccount_CAT)]<-0
datosBanca$deposit_CAT[is.na(datosBanca$deposit_CAT)]<-0
datosBanca$shareOfStock_CAT[is.na(datosBanca$shareOfStock_CAT)]<-0
datosBanca$pensionPlan_CAT[is.na(datosBanca$pensionPlan_CAT)]<-0
datosBanca$mortgage_CAT[is.na(datosBanca$mortgage_CAT)]<-0
datosBanca$loan_CAT[is.na(datosBanca$loan_CAT)]<-0
datosBanca$cards_CAT[is.na(datosBanca$cards_CAT)]<-0
datosBanca$insurance_CAT[is.na(datosBanca$insurance_CAT)]<-0
datosBanca$billPayment_CAT[is.na(datosBanca$billPayment_CAT)]<-0
datosBanca.cat <- datosBanca %>%
select(ends_with('_CAT'))
summary(datosBanca.cat)
Mcor <- cor(datosBanca.cat,method = c("spearman"))
corrplot(Mcor, method = 'number')
datosBanca.cat.subset <- datosBanca.cat[sample(nrow(datosBanca.cat), nrow(datosBanca.cat) * 0.1), ]
rownames(datosBanca.cat.subset) <- 1:nrow(datosBanca.cat.subset)
matrizDistancias <- vegdist(datosBanca.cat.subset, method = "euclidean")
clusterJerarquico <- hclust(matrizDistancias, method="ward.D2")
plot(as.dendrogram(clusterJerarquico),  main = "Dendrograma", leaflab = 'none')
for (k in 2:8){
rect.hclust(clusterJerarquico, k=k, border=k)
}
calinsky <- cascadeKM(datosBanca.cat.subset, inf.gr = 2, sup.gr = 10, criterion = "calinski", iter = 5)
calinsky$results
plot(calinsky$results[2,], type = 'b', lty=3, xlab="k (number of groups)", ylab = "Calinski", xaxt='n')
axis(1, seq(1,9), labels = 2:10)
kmax <- 15
asw <- numeric(kmax)
for(k in 2:kmax){
sil <- silhouette(cutree(clusterJerarquico, k = k), matrizDistancias)
asw[k] <- summary(sil)$avg.width
}
k.best <- which.max(asw)
plot(1:kmax, asw, type="h",
main = "Silhouette-optimal number of clusters",
xlab = "k (number of groups)", ylab = "Average silhouette width")
axis(1, k.best, paste("optimum", k.best, sep = "\n"), col = "red", font = 2,
col.axis = "red")
points(k.best, max(asw), pch = 16, col = "red", cex = 1.5)
asignacionJerarquica <- cbind(datosBanca.cat.subset, cutree(clusterJerarquico, k = 4))
colnames(asignacionJerarquica)[11] <- "cluster"
centroidesJerarquico <-
asignacionJerarquica %>%
group_by(cluster) %>%
summarise(size = n(),
checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans <- kmeans(datosBanca.cat, centers=centroidesJerarquico[,3:12])
kmeans$centers
kmeans$size
centroideGeneral <- datosBanca.cat %>%
summarise(checkingAccount_CAT = mean(checkingAccount_CAT),
deposit_CAT = mean(deposit_CAT),
shareOfStock_CAT = mean(shareOfStock_CAT),
pensionPlan_CAT = mean(pensionPlan_CAT),
mortgage_CAT = mean(mortgage_CAT),
loan_CAT = mean(loan_CAT),
cards_CAT = mean(cards_CAT),
insurance_CAT = mean(insurance_CAT),
billPayment_CAT = mean(billPayment_CAT),
salary_CAT = mean(salary_CAT)
)
kmeans.subset <- kmeans(datosBanca.cat.subset, centers=centroidesJerarquico[,3:12])
fviz_cluster(object = kmeans.subset, data = datosBanca.cat.subset, show.clust.cent = TRUE,
ellipse.type = "euclid",
geom = 'point') +
labs(title = "Resultados clustering K-means para la Muestra") +
theme_bw() +
theme(legend.position = "none")
centroidesParaRadar<-rbind(
rep(1,10) ,
rep(0,10) ,
centroideGeneral,
kmeans$centers)
colors_border = c( rgb(0.2,0.5,0.5,0.9),rgb(0.14,0.83,0.19,0.9))
colors_in = c( rgb(0.2,0.5,0.5,0.4), rgb(0.14,0.83,0.19,0.4))
group <- 1
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Asalariados'
)
group <- 2
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'No asalariados'
)
group <- 3
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Ahorradores'
)
group <- 4
radarchart( as.data.frame(centroidesParaRadar[c(1:3,3+group),]), axistype=1 ,
#custom polygon
pcol = colors_border, pfcol = colors_in, plwd=2, plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5),
#custom labels
vlcex=0.8,
# title
title = 'Productos de Activo'
)
