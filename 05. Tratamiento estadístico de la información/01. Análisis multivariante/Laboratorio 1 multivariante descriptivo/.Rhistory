#  SEAR South-East Asia
#  WPR  Western Pacific
WHO = WHO %>% rename(Country=Label, COUNTRY=ID)
# WHOSIS_000001: Life expectancy at birth (years)
var = get_gho_data("WHOSIS_000001") %>% mutate(LifeExpectancy=Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, LifeExpectancy)
WHO = merge(WHO, var, by="COUNTRY", all=T)
dim(WHO)
# MDG_0000000001: Infant mortality rate (probability of dying between birth and age 1 per 1000 live births)
var = get_gho_data("MDG_0000000001") %>% mutate(IMR = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, IMR)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# # WHS9_86: Population (in thousands) total
# var = get_gho_data("WHS9_86") %>% mutate(Population = Numeric) %>%
#   group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
#   dplyr::select(COUNTRY, Population)
# WHO = merge(WHO, var, by="COUNTRY", all=T)
# Population is now taken from World Bank data bank, available through tidyr
var = filter(world_bank_pop, indicator=="SP.POP.TOTL")[,c(1,20)]
names(var) = c("COUNTRY", "Population")
var$Population = var$Population/1000
WHO = merge(WHO, var, by="COUNTRY", all=T)
# SDGPM25 : Annual mean levels of fine particulate matter (PM2.5)
var = get_gho_data("SDGPM25") %>% mutate(AirPollution = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, AirPollution)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# VIOLENCE_HOMICIDERATE: Estimates of rates of homicides per 100 000 population
var = get_gho_data("VIOLENCE_HOMICIDERATE") %>% mutate(HomicidesRate = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HomicidesRate)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS6_102: Hospital beds (per 10 000 population)
var = get_gho_data("WHS6_102") %>% mutate(HospitalBeds = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HospitalBeds)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS7_143: Total expenditure on health as a percentage of gross domestic product
var = get_gho_data("WHS7_143") %>% mutate(HealthExpenditure = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HealthExpenditure)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# ITU_ICT_1: Percentage of individuals using the Internet
var = get_gho_data("ITU_ICT_1") %>% mutate(Internet = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Internet)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# HRH_26: Physicians density (per 1000 population)
var = get_gho_data("HRH_26") %>% mutate(Physicians = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Physicians)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# Names for Continents and Regions, and remove countries with no Region
WHO$Continent = countrycode(WHO$Country, "country.name", destination="continent")
WHO$Region = countrycode(WHO$Country, "country.name", destination="region")
WHO = WHO %>% drop_na(Continent,Region)
WHO = WHO %>%
dplyr::select(Country,COUNTRY,Continent, Region, everything())
happiness <- read.csv('WHR20_Data.csv', stringsAsFactors=T)
names(happiness)[c(1,2,3,7,8,9,10,11,12)] = c("country", "region", "happiness", "gdp", "social_support", "life_expectancy", "perceived_freedom", "generosity", "perception_of_corruption")
happiness = happiness[,c(1,2,3,7,8,10,11,12)]
happiness$COUNTRY = countrycode(happiness$country, 'country.name', 'iso3c')
df = merge(WHO, happiness, by="COUNTRY")
write.table(df, "WorldData2022.txt", sep=",")
happiness <- read.csv('WHR20_Data.csv', stringsAsFactors=T)
names(happiness)[c(1,2,3,7,8,9,10,11,12)] = c("country", "region", "happiness", "gdp", "social_support", "life_expectancy", "perceived_freedom", "generosity", "perception_of_corruption")
happiness = happiness[,c(1,2,3,7,8,10,11,12)]
happiness$COUNTRY = countrycode(happiness$country, 'country.name', 'iso3c')
df = merge(WHO, happiness, by="COUNTRY")
setwd("ASIGNATURAS MASTER/Tratamiento estadístico de la información/Análisis multivariante/Laboratorio 1 multivariante descriptivo/")
happiness <- read.csv('WHR20_Data.csv', stringsAsFactors=T)
names(happiness)[c(1,2,3,7,8,9,10,11,12)] = c("country", "region", "happiness", "gdp", "social_support", "life_expectancy", "perceived_freedom", "generosity", "perception_of_corruption")
happiness = happiness[,c(1,2,3,7,8,10,11,12)]
happiness$COUNTRY = countrycode(happiness$country, 'country.name', 'iso3c')
df = merge(WHO, happiness, by="COUNTRY")
write.table(df, "WorldData2022.txt", sep=",")
---
title: "Notebook to download socio-economic data in the world"
author: "Máster en Data Science y Big Data en Finanzas"
date: 'AFI, 2022'
output:
html_document:
css: my-theme.css
theme: cerulean
highlight: tango
number_sections: no
toc: no
toc_depth: 1
pdf_document:
css: my-theme.css
theme: cerulean
highlight: tango
number_sections: yes
toc: yes
toc_depth: 1
editor_options:
chunk_output_type: console
---
```{r global_options, include=T, echo = F}
knitr::opts_chunk$set(echo = T, warning=FALSE, message=FALSE)
```
```{r, echo=FALSE}
htmltools::img(src = knitr::image_uri(file.path("AfiLogo.jpg")),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px;',
width="173",
height="77")
```
Load and prepare data from the World Health Organization (WHO) connecting through its API
Here we can browse WHO data by topic:
https://apps.who.int/gho/data/node.main
```{r}
# devtools::install_github("pierucci/rgho@devel")
library(rgho)  #Api WHO
library(tidyverse)
library(countrycode)
library(rworldmap)
library(GGally)
```
Let's start downloading variables from WHO
```{r}
# Create a data frame with all countries in the world
WHO = dplyr::arrange(
rgho:::to_data_frame(
get_gho_codes(dimension = "COUNTRY")
),
Label)
# Regions:
#  AFR  Africa
#  AMR  Americas
#  EMR  Eastern Mediterranean
#  EUR  Europe
#  SEAR South-East Asia
#  WPR  Western Pacific
WHO = WHO %>% rename(Country=Label, COUNTRY=ID)
# WHOSIS_000001: Life expectancy at birth (years)
var = get_gho_data("WHOSIS_000001") %>% mutate(LifeExpectancy=Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, LifeExpectancy)
WHO = merge(WHO, var, by="COUNTRY", all=T)
dim(WHO)
# MDG_0000000001: Infant mortality rate (probability of dying between birth and age 1 per 1000 live births)
var = get_gho_data("MDG_0000000001") %>% mutate(IMR = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, IMR)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# # WHS9_86: Population (in thousands) total
# var = get_gho_data("WHS9_86") %>% mutate(Population = Numeric) %>%
#   group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
#   dplyr::select(COUNTRY, Population)
# WHO = merge(WHO, var, by="COUNTRY", all=T)
# Population is now taken from World Bank data bank, available through tidyr
var = filter(world_bank_pop, indicator=="SP.POP.TOTL")[,c(1,20)]
names(var) = c("COUNTRY", "Population")
var$Population = var$Population/1000
WHO = merge(WHO, var, by="COUNTRY", all=T)
# SDGPM25 : Annual mean levels of fine particulate matter (PM2.5)
var = get_gho_data("SDGPM25") %>% mutate(AirPollution = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, AirPollution)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# VIOLENCE_HOMICIDERATE: Estimates of rates of homicides per 100 000 population
var = get_gho_data("VIOLENCE_HOMICIDERATE") %>% mutate(HomicidesRate = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HomicidesRate)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS6_102: Hospital beds (per 10 000 population)
var = get_gho_data("WHS6_102") %>% mutate(HospitalBeds = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HospitalBeds)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS7_143: Total expenditure on health as a percentage of gross domestic product
var = get_gho_data("WHS7_143") %>% mutate(HealthExpenditure = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HealthExpenditure)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# ITU_ICT_1: Percentage of individuals using the Internet
var = get_gho_data("ITU_ICT_1") %>% mutate(Internet = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Internet)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# HRH_26: Physicians density (per 1000 population)
var = get_gho_data("HRH_26") %>% mutate(Physicians = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Physicians)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# Names for Continents and Regions, and remove countries with no Region
WHO$Continent = countrycode(WHO$Country, "country.name", destination="continent")
WHO$Region = countrycode(WHO$Country, "country.name", destination="region")
WHO = WHO %>% drop_na(Continent,Region)
WHO = WHO %>%
dplyr::select(Country,COUNTRY,Continent, Region, everything())
```
Now, we are going to merge data from The World Happiness Report (WHR) https://worldhappiness.report/ed/2020/
This report ranks cities and countries based on a survey about life evaluations.
The WHR considers 6 underlying determinants for happiness: GDP per capita, healthy life expectancy, social support, perceived freedom, generosity, and perception of corruption.
More information here: https://happiness-report.s3.amazonaws.com/2020/WHR20_Ch2_Statistical_Appendix.pdf
```{r}
happiness <- read.csv('WHR20_Data.csv', stringsAsFactors=T)
names(happiness)[c(1,2,3,7,8,9,10,11,12)] = c("country", "region", "happiness", "gdp", "social_support", "life_expectancy", "perceived_freedom", "generosity", "perception_of_corruption")
happiness = happiness[,c(1,2,3,7,8,10,11,12)]
happiness$COUNTRY = countrycode(happiness$country, 'country.name', 'iso3c')
df = merge(WHO, happiness, by="COUNTRY")
```
Write the file to load it later
```{r}
write.table(df, "WorldData2022.txt", sep=",")
```
knitr::opts_chunk$set(echo = T, warning=FALSE, message=FALSE)
htmltools::img(src = knitr::image_uri(file.path("AfiLogo.jpg")),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px;',
width="173",
height="77")
# devtools::install_github("pierucci/rgho@devel")
library(rgho)  #Api WHO
library(tidyverse)
library(countrycode)
library(rworldmap)
library(GGally)
# Create a data frame with all countries in the world
WHO = dplyr::arrange(
rgho:::to_data_frame(
get_gho_codes(dimension = "COUNTRY")
),
Label)
# Regions:
#  AFR  Africa
#  AMR  Americas
#  EMR  Eastern Mediterranean
#  EUR  Europe
#  SEAR South-East Asia
#  WPR  Western Pacific
WHO = WHO %>% rename(Country=Label, COUNTRY=ID)
# WHOSIS_000001: Life expectancy at birth (years)
var = get_gho_data("WHOSIS_000001") %>% mutate(LifeExpectancy=Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, LifeExpectancy)
WHO = merge(WHO, var, by="COUNTRY", all=T)
dim(WHO)
# MDG_0000000001: Infant mortality rate (probability of dying between birth and age 1 per 1000 live births)
var = get_gho_data("MDG_0000000001") %>% mutate(IMR = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% arrange(SEX) %>% slice(1) %>%
dplyr::select(COUNTRY, IMR)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# # WHS9_86: Population (in thousands) total
# var = get_gho_data("WHS9_86") %>% mutate(Population = Numeric) %>%
#   group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
#   dplyr::select(COUNTRY, Population)
# WHO = merge(WHO, var, by="COUNTRY", all=T)
# Population is now taken from World Bank data bank, available through tidyr
var = filter(world_bank_pop, indicator=="SP.POP.TOTL")[,c(1,20)]
names(var) = c("COUNTRY", "Population")
var$Population = var$Population/1000
WHO = merge(WHO, var, by="COUNTRY", all=T)
# SDGPM25 : Annual mean levels of fine particulate matter (PM2.5)
var = get_gho_data("SDGPM25") %>% mutate(AirPollution = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, AirPollution)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# VIOLENCE_HOMICIDERATE: Estimates of rates of homicides per 100 000 population
var = get_gho_data("VIOLENCE_HOMICIDERATE") %>% mutate(HomicidesRate = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HomicidesRate)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS6_102: Hospital beds (per 10 000 population)
var = get_gho_data("WHS6_102") %>% mutate(HospitalBeds = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HospitalBeds)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# WHS7_143: Total expenditure on health as a percentage of gross domestic product
var = get_gho_data("WHS7_143") %>% mutate(HealthExpenditure = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, HealthExpenditure)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# ITU_ICT_1: Percentage of individuals using the Internet
var = get_gho_data("ITU_ICT_1") %>% mutate(Internet = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Internet)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# HRH_26: Physicians density (per 1000 population)
var = get_gho_data("HRH_26") %>% mutate(Physicians = Numeric) %>%
group_by(COUNTRY) %>% filter(YEAR==max(YEAR,na.rm=T)) %>% slice(1) %>%
dplyr::select(COUNTRY, Physicians)
WHO = merge(WHO, var, by="COUNTRY", all=T)
# Names for Continents and Regions, and remove countries with no Region
WHO$Continent = countrycode(WHO$Country, "country.name", destination="continent")
WHO$Region = countrycode(WHO$Country, "country.name", destination="region")
WHO = WHO %>% drop_na(Continent,Region)
WHO = WHO %>%
dplyr::select(Country,COUNTRY,Continent, Region, everything())
happiness <- read.csv('WHR20_Data.csv', stringsAsFactors=T)
names(happiness)[c(1,2,3,7,8,9,10,11,12)] = c("country", "region", "happiness", "gdp", "social_support", "life_expectancy", "perceived_freedom", "generosity", "perception_of_corruption")
happiness = happiness[,c(1,2,3,7,8,10,11,12)]
happiness$COUNTRY = countrycode(happiness$country, 'country.name', 'iso3c')
df = merge(WHO, happiness, by="COUNTRY")
write.table(df, "WorldData2022.txt", sep=",")
knitr::opts_chunk$set(echo = T, warning=FALSE, message=FALSE)
htmltools::img(src = knitr::image_uri(file.path("AfiLogo.jpg")),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px;',
width="173",
height="77")
library(tidyverse)
library(countrycode)
library(rworldmap)
library(GGally)
WHO = read.table("WorldData2022.txt", sep=",")
dim(WHO)
str(WHO)
head(WHO)
tail(WHO)
summary(WHO)
WHO$Country[duplicated(WHO$Country)]
WHO = WHO[-33,]
X = WHO %>% dplyr::select(-Continent,-Region,-Country, -COUNTRY,-region,-country,-Population)
dim(WHO)[1]
dim(na.omit(X))[1]
id.complete = complete.cases(X)
names = WHO$Country[id.complete]
continent = WHO$Continent[id.complete]
population = WHO$Population[id.complete]
X = X[id.complete,]
row.names(X)=names
id.complete
names
table(WHO$Continent)
WHO %>% ggplot(aes(x=reorder(Continent, Continent, length))) +geom_bar(aes(fill=Continent)) +
labs(caption="Countries per continent",
x = "", y = "")+ theme(legend.position="none")
# select your favourite variable here:
map = WHO %>% dplyr::select(Country, LifeExpectancy)
#Convert the country code into iso3c using the function countrycode()
map$country = countrycode(map$Country, 'country.name', 'iso3c')
#Create data object supporting the map
matched <- joinCountryData2Map(map, joinCode = "ISO3",
nameJoinColumn = "country")
#Draw the map
mapCountryData(matched,nameColumnToPlot="LifeExpectancy",missingCountryCol = "white",
borderCol = "#C7D9FF",
catMethod = "pretty", colourPalette = "topo",
mapTitle = c("Life Expectancy by Country"), lwd=1)
colMeans(X)
cor(X)
cov(X)
cor(X)
cor(X)
ggcor(X)
library(ggplot2)
cor(X)
ggcor(X)
cor(X)
ggcorr(X)
det(cov(S))
det(cov(X))
S <- cov(X)
det(cov(S))
det(cor(S))
boxplot(X, col="blue", las=2)
boxplot(scale(X), las=2, col="darkblue")
scale(X)
ggcorr(X, label = T)
ggplot(WHO, aes(x=HealthExpenditure, y=LifeExpectancy, group=Continent, size=Population, color=happiness)) +
geom_point(alpha=0.9) + geom_smooth(method=lm,se=F, size=0.3) +
facet_wrap(~ Continent) +
scale_color_gradient(low="red", high="green") +
theme_minimal()+ theme(legend.position="none") +
labs(title = "World countries: life expectancy vs health expenditure", subtitle="(color denotes happiness, size denotes population)",caption="Source: World Health Organization",
x = "Expenditure on health (percentage of GDP)", y = "Life expectancy at birth (in years)")
ggplot(WHO, aes(x=HealthExpenditure, y=LifeExpectancy, group=Continent, size=Population, color=happiness)) +
geom_point(alpha=0.9) + geom_smooth(method=lm,se=F, size=0.3) +
#facet_wrap(~ Continent) +
scale_color_gradient(low="red", high="green") +
theme_minimal()+ theme(legend.position="none") +
labs(title = "World countries: life expectancy vs health expenditure", subtitle="(color denotes happiness, size denotes population)",caption="Source: World Health Organization",
x = "Expenditure on health (percentage of GDP)", y = "Life expectancy at birth (in years)")
ggplot(WHO, aes(x=HealthExpenditure, y=LifeExpectancy, group=Continent, size=Population, color=happiness)) +
geom_point(alpha=0.9) + geom_smooth(method=lm,se=F, size=0.3) +
facet_wrap(~ Continent) +
scale_color_gradient(low="red", high="green") +
theme_minimal()+ theme(legend.position="none") +
labs(title = "World countries: life expectancy vs health expenditure", subtitle="(color denotes happiness, size denotes population)",caption="Source: World Health Organization",
x = "Expenditure on health (percentage of GDP)", y = "Life expectancy at birth (in years)")
WHO %>% ggplot(aes(x=gdp, y=happiness, group=Continent, size=Population, color=region)) +
geom_point(alpha=0.75) + geom_smooth(method=lm,se=F, size=0.3) +
facet_wrap(~ Continent) +
theme_minimal()+ theme(legend.position="none") +
labs(title = "Happiness vs wealth by continent", subtitle="(size denotes population, color denotes region)",caption="Source: World Happiness Report",
x = "GDP (log)", y = "Happiness Score")
S_x <- cov(X)
iS <- solve(S_x)
e <- eigen(iS)
V <- e$vectors
B <- V %*% diag(sqrt(e$values)) %*% t(V)
Xtil <- scale(X,scale = FALSE)
X.S <- Xtil %*% B
muhat = colMeans(X)
dM2 <- mahalanobis(X,muhat,S)  # Mahalanobis distances (square)
dM2
plot(sort(dM2,index.return=TRUE)$x,pch=19,col=grey.colors(n=length(dM2),start=0,end=.75),xlab="",ylab="",main="Mahalanobis distances (square)")
sort(dM2)
dM2 <- mahalanobis(X,t(X["Spain",]),S)
head(sort(dM2))
dM2
dM2 <- mahalanobis(X,t(X["Spain",]),S)
head(sort(dM2))
muhat = colMeans(X)
dM2 <- mahalanobis(X,muhat,S)  # Mahalanobis distances (square)
dM2
plot(sort(dM2,index.return=TRUE)$x,pch=19,col=grey.colors(n=length(dM2),start=0,end=.75),xlab="",ylab="",main="Mahalanobis distances (square)")
sort(dM2)
dM2 <- mahalanobis(X,t(X["Spain",]),S)
head(sort(dM2))
dM2
sort(dM2)
pca = prcomp(X, scale=T)
summary(pca)
library(factoextra)
fviz_screeplot(pca, addlabels = TRUE)
barplot(pca$rotation[,1], las=2, col="darkblue")
data.frame(z1=pca$x[,1],z2=pca$x[,2]) %>%
ggplot(aes(z1,z2,label=names,color=continent)) + geom_point(size=0) +
labs(title="First two principal components (scores)", x="PC1", y="PC2") + #guides(color=guide_legend(title="HDI"))+
theme_bw() +theme(legend.position="bottom") + geom_text(size=3, hjust=0.6, vjust=0, check_overlap = TRUE)
# The two first PCs seem independent
data.frame(z1=pca$x[,1],z2=pca$x[,2])
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
library(dplyr)
players <- read.csv(file = "fifa22_players.csv", encoding = "UTF-8", as.is = 2)
# Cantidad total de filas
nrow(players)
# Cantidad total de columnas
ncol(players)
# Nombres de columnas
colnames(players)
head(players)
str(players)
summary(players)
for(i in 1:ncol(players)){
if(!colnames(players)[i] %in% c("Overall", "Name", "ID", "AttackingWorkRate",
"DefensiveWorkRate", "PreferredFoot", "NationalTeam"))
{
plot(players[,i], players$Overall, type='p', xlab=names(players)[i], ylab="Overall")
}
}
# Cantidad total de filas
nrow(players)
# Cantidad total de columnas
ncol(players)
# Nombres de columnas
colnames(players)
# Cantidad total de filas
nrow(players)
# Cantidad total de columnas
ncol(players)
# Nombres de columnas
colnames(players)
head(players)
str(players)
summary(players)
for(i in 1:ncol(players)){
if(!colnames(players)[i] %in% c("Overall", "Name", "ID", "AttackingWorkRate",
"DefensiveWorkRate", "PreferredFoot", "NationalTeam"))
{
plot(players[,i], players$Overall, type='p', xlab=names(players)[i], ylab="Overall")
}
}
for(i in 1:ncol(players)){
if(!colnames(players)[i] %in% c("Overall", "Name", "ID"))
{
plot(players[,i], players$Overall, type='p', xlab=names(players)[i], ylab="Overall")
}
}
hist(players$Overall, breaks = 20)
library(dplyr)
players <- read.csv(file = "fifa22_players.csv", encoding = "UTF-8", as.is = 2)
lm_fit_overall <- lm(Overall ~ Age + NationalTeam + PreferredFoot + WageEUR +
Growth + Volleys + ShootingTotal + PassingTotal +
DribblingTotal + DefendingTotal + PhysicalityTotal,
data = players)
summary(lm_fit_overall)
plot(log(players$WageEUR), players$Overall, type='p', xlab="log(WageEUR)", ylab="Overall")
count(players[(players$WageEUR == 0), ])
summary(players[(players$WageEUR == 0), ]) #son sin contrato
count(players[(players$WageEUR == 0), ])
summary(players[(players$WageEUR == 0), ])
count(players[(players$WageEUR == 0), ])
summary(players[(players$WageEUR == 0), ])
players_with_contract <- players[(players$WageEUR != 0), ]
lm_fit_overall_contract <- lm(Overall ~ Age + NationalTeam + PreferredFoot + I(log(WageEUR)) +
Growth + Volleys + ShootingTotal + PassingTotal +
DribblingTotal + DefendingTotal + PhysicalityTotal,
data = players_with_contract)
summary(lm_fit_overall_contract)
confint(lm_fit_overall_contract, level = 0.95)
lm_fit_overall_contract_reduced <- lm(Overall ~ Age + NationalTeam + I(log(WageEUR)) +
Growth + Volleys + PassingTotal +
DribblingTotal + DefendingTotal + PhysicalityTotal,
data = players_with_contract)
summary(lm_fit_overall_contract_reduced)
plot(hatvalues(lm_fit_overall_contract_reduced))
cooksD <- cooks.distance(lm_fit_overall_contract_reduced)
plot(cooksD, pch=20, main="Influential Obs by Cooks Distance")
abline(h = 4*mean(cooksD), col='red')
head(sort(cooksD, decreasing = T), n = 10)
head(players[order(cooksD, decreasing = T), c('ID','Name')], n = 10)
head(sort(cooksD, decreasing = T), n = 10)
head(players[order(cooksD, decreasing = T), c('ID','Name')], n = 10)
